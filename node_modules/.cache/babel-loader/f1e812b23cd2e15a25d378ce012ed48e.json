{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yatinsatija/Desktop/RVCEx/src/pages/uploading/imageupload.component.jsx\";\nimport React from \"react\"; // import Axios from \"axios\";\n\nimport \"./imageupload.styles.scss\";\nimport { storage, firestore } from \"../../firebase/firebase.utils\";\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._handleSubmit = async event => {\n      const uploadTask = storage.ref(`userPhotoIds/${this.state.file.name}`).put(this.state.file);\n      uploadTask.on('state_changed', snapShot => {\n        alert(\"uploading in progress\");\n      }, error => {\n        alert(error.message);\n      }, () => {\n        storage.ref('userPhotoIds').child(this.state.file.name).getDownloadURL().then(url => {\n          alert(\"Image_uploaded\");\n          localStorage.setItem(\"url\", url);\n          console.log(\"image uploaded\");\n          this.setState({\n            photoIdUrl: url\n          }, () => console.log(this.state));\n        });\n      });\n    };\n\n    this.state = {\n      file: '',\n      imagePreviewUrl: '',\n      uploads: []\n    };\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    let {\n      imagePreviewUrl\n    } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreviewUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }, this);\n    } else {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previewText\",\n        children: \"Please select an Image for Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 26\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previewComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"fileInput\",\n          type: \"file\",\n          onChange: e => this._handleImageChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submitButton\",\n          type: \"button\",\n          onClick: e => this._handleSubmit(e),\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imgPreview\",\n        children: $imagePreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/yatinsatija/Desktop/RVCEx/src/pages/uploading/imageupload.component.jsx"],"names":["React","storage","firestore","ImageUpload","Component","constructor","props","_handleSubmit","event","uploadTask","ref","state","file","name","put","on","snapShot","alert","error","message","child","getDownloadURL","then","url","localStorage","setItem","console","log","setState","photoIdUrl","imagePreviewUrl","uploads","_handleImageChange","e","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","render","$imagePreview"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import Axios from \"axios\";\nimport \"./imageupload.styles.scss\";\nimport { storage, firestore } from \"../../firebase/firebase.utils\";\n\nclass ImageUpload extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {file: '',imagePreviewUrl: '',uploads:[]};\n    \n    }\n  \n\n        \n\n\n    _handleSubmit = async (event) => {\n      \n      const uploadTask = storage.ref(`userPhotoIds/${this.state.file.name}`).put(this.state.file);\n\n            uploadTask.on('state_changed',\n                (snapShot) => { alert(\"uploading in progress\") },\n                (error) => { alert(error.message) },\n                () => {\n                    storage\n                        .ref('userPhotoIds')\n                        .child(this.state.file.name)\n                        .getDownloadURL()\n                        .then((url) => {\n                            alert(\"Image_uploaded\");\n                            localStorage.setItem(\"url\",url)\n                            console.log(\"image uploaded\");\n                            this.setState({ photoIdUrl: url }, () => console.log(this.state));\n                        })\n                });\n\n      \n    };\n    _handleImageChange(e) {\n      e.preventDefault();\n  \n      let reader = new FileReader();\n      let file = e.target.files[0];\n  \n      reader.onloadend = () => {\n        this.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });\n      }\n  \n      reader.readAsDataURL(file)\n    }\n  \n    render() {\n      let {imagePreviewUrl} = this.state;\n      let $imagePreview = null;\n      if (imagePreviewUrl) {\n        $imagePreview = (<img src={imagePreviewUrl} />);\n      } else {\n        $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n      }\n  \n      return (\n        <div className=\"previewComponent\">\n          <form >\n            <input className=\"fileInput\" \n              type=\"file\" \n              onChange={(e)=>this._handleImageChange(e)} />\n            <button className=\"submitButton\" \n              type=\"button\" \n              onClick={(e)=>this._handleSubmit(e)}\n              >Upload Image</button>\n          </form>\n          <div className=\"imgPreview\">\n            {$imagePreview}\n          </div>\n        </div>\n      )\n    }\n  }\n\nexport default ImageUpload;\n    \n"]},"metadata":{},"sourceType":"module"}