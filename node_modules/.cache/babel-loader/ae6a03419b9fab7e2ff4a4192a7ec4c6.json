{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yatinsatija/Desktop/RVCEx/src/pages/dashboard/Dashboard.js\";\nimport React from \"react\";\nimport { TextField, Button, FormControl } from \"@material-ui/core\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport ItemCard from \"./ItemCard\";\nimport \"./dashboard.css\";\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = event => {\n      this.setState({\n        jobSearchText: event.target.value\n      }, () => {\n        var __self = this;\n\n        var updatedList = __self.state.items;\n        updatedList = __self.state.items.filter(function (key) {\n          console.log(key);\n          return key.item.toLowerCase().search(__self.state.jobSearchText.toLowerCase()) !== -1 //     ||\n          // .name.toLowerCase()\n          // .search(__self.state.jobSearchText.toLowerCase()) !== -1 ||\n          // item.skillName.toString().toLowerCase().search(__self.state.jobSearchText.toLowerCase()) !== -1\n          ;\n        });\n        this.setState({\n          filteredItems: updatedList\n        });\n      });\n    };\n\n    this.state = {\n      // user: localStorage.getItem(\"employer\"),\n      selectedJob: null,\n      items: [],\n      //   jobs: [],\n      filteredItems: [],\n      jobSearchText: \"\"\n    };\n  }\n\n  async f1() {\n    const snapShot = await firestore.collection(\"items\").get();\n    const docsArray = snapShot.docs;\n    const docsArrayData = docsArray.map(doc => doc.data());\n    return docsArrayData;\n  }\n\n  async functionFirebase() {\n    const array = await this.f1();\n    this.setState(Object.assign(this.state.items, {\n      items: array,\n      filteredItems: array\n    }));\n  }\n\n  componentDidMount() {\n    // if (!this.state.user) {\n    //     window.location.assign(\"/\");\n    // }\n    //this.setState({user:auth.currentUser})\n    this.functionFirebase();\n    console.log(this.state.items); // console.log(\"user:\" + this.state.user)\n  }\n\n  render() {\n    //console.log(this.state.jobs);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"head\",\n        children: \"Find Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search Jobs\",\n          value: this.state.jobSearchText,\n          onChange: this.handleSearch,\n          style: {\n            marginTop: \"1%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn\",\n        onClick: () => window.location.assign(\"/upload\"),\n        children: \"+Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        },\n        children: this.state.filteredItems.map(element => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"2% 1%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ItemCard, {\n              event: element\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yatinsatija/Desktop/RVCEx/src/pages/dashboard/Dashboard.js"],"names":["React","TextField","Button","FormControl","firestore","ItemCard","Dashboard","Component","constructor","props","handleSearch","event","setState","jobSearchText","target","value","__self","updatedList","state","items","filter","key","console","log","item","toLowerCase","search","filteredItems","selectedJob","f1","snapShot","collection","get","docsArray","docs","docsArrayData","map","doc","data","functionFirebase","array","Object","assign","componentDidMount","render","marginTop","window","location","display","flexWrap","element","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { TextField, Button, FormControl } from \"@material-ui/core\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport ItemCard from \"./ItemCard\";\nimport \"./dashboard.css\";\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // user: localStorage.getItem(\"employer\"),\n      selectedJob: null,\n      items: [],\n      //   jobs: [],\n      filteredItems: [],\n      jobSearchText: \"\",\n    };\n  }\n\n  async f1() {\n    const snapShot = await firestore.collection(\"items\").get();\n    const docsArray = snapShot.docs;\n    const docsArrayData = docsArray.map((doc) => doc.data());\n    return docsArrayData;\n  }\n\n  async functionFirebase() {\n    const array = await this.f1();\n    this.setState(\n      Object.assign(this.state.items, { items: array, filteredItems: array })\n    );\n  }\n\n  handleSearch = (event) => {\n    this.setState({ jobSearchText: event.target.value }, () => {\n      var __self = this;\n      var updatedList = __self.state.items;\n      updatedList = __self.state.items.filter(function (key) {\n        console.log(key);\n        return (\n          key.item\n            .toLowerCase()\n            .search(__self.state.jobSearchText.toLowerCase()) !== -1\n          //     ||\n          // .name.toLowerCase()\n          // .search(__self.state.jobSearchText.toLowerCase()) !== -1 ||\n          // item.skillName.toString().toLowerCase().search(__self.state.jobSearchText.toLowerCase()) !== -1\n        );\n      });\n\n      this.setState({\n        filteredItems: updatedList,\n      });\n    });\n  };\n\n  componentDidMount() {\n    // if (!this.state.user) {\n    //     window.location.assign(\"/\");\n    // }\n    //this.setState({user:auth.currentUser})\n    this.functionFirebase();\n    console.log(this.state.items);\n    // console.log(\"user:\" + this.state.user)\n  }\n\n  render() {\n    //console.log(this.state.jobs);\n    return (\n      <div>\n        <h1 className=\"head\">Find Items</h1>\n        <FormControl>\n          <TextField\n            label=\"Search Jobs\"\n            value={this.state.jobSearchText}\n            onChange={this.handleSearch}\n            style={{ marginTop: \"1%\" }}\n          />\n        </FormControl>\n        <Button\n          className=\"btn\"\n          onClick={() => window.location.assign(\"/upload\")}\n        >\n          +Add New Item\n        </Button>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {this.state.filteredItems.map((element) => {\n            return (\n              <div style={{ margin: \"2% 1%\" }}>\n                <ItemCard event={element} />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}