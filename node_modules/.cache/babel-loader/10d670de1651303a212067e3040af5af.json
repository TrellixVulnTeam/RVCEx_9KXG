{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yatinsatija/Desktop/RVCEx/src/pages/dashboard/Dashboard.js\";\nimport React from \"react\";\nimport { TextField, Button, FormControl } from \"@material-ui/core\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport ItemCard from \"./ItemCard\";\nimport \"./dashboard.css\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = event => {\n      this.setState({\n        jobSearchText: event.target.value\n      }, () => {\n        var __self = this;\n\n        var updatedList = __self.state.items;\n        updatedList = __self.state.items.filter(function (key) {\n          console.log(key);\n          return key.itemName.toLowerCase().search(__self.state.jobSearchText.toLowerCase()) !== -1;\n        });\n        this.setState({\n          filteredItems: updatedList\n        });\n      });\n    };\n\n    this.state = {\n      selectedJob: null,\n      items: [],\n      filteredItems: [],\n      jobSearchText: \"\"\n    };\n  }\n\n  async componentWillMount() {\n    console.log(localStorage.getItem(\"currentUserEmail\"));\n\n    if (!localStorage.getItem(\"currentUserEmail\")) {\n      alert(\"Login to use dashboard\");\n      this.props.history.push(\"/signin\");\n    } else {\n      const currentUserDocument = await firestore.doc(`users/${localStorage.getItem(\"currentUserEmail\")}`).get();\n      const {\n        tokens\n      } = currentUserDocument.data();\n\n      if (tokens < 5) {\n        alert(\"You don't have minimum tokens to view dashboard\\nYou can get more tokens on adding any item of yours\");\n        this.props.history.push(\"/myitems\");\n      }\n    }\n  }\n\n  async f1() {\n    const snapShot = await firestore.collection(\"items\").get();\n    const docsArray = snapShot.docs;\n    const docsArrayData = docsArray.map(doc => ({ ...doc.data(),\n      id: doc.id\n    }));\n    return docsArrayData;\n  }\n\n  async functionFirebase() {\n    var array = await this.f1();\n    array = array.filter(doc => doc.isAssigned === false);\n    this.setState(Object.assign(this.state.items, {\n      items: array,\n      filteredItems: array\n    }));\n  }\n\n  componentDidMount() {\n    this.functionFirebase();\n    console.log(this.state.items);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"head\",\n        children: \"Find Items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search Jobs\",\n          value: this.state.jobSearchText,\n          onChange: this.handleSearch,\n          style: {\n            marginTop: \"1%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn\",\n        onClick: () => window.location.assign(\"/upload\"),\n        children: \"+Add New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        },\n        children: this.state.filteredItems.map((element, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"2% 1%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ItemCard, {\n              event: element\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Dashboard; // import React from 'react';\n// import {TextField, Button, FormControl } from '@material-ui/core';\n// import { firestore } from '../../firebase/firebase.utils';\n// import ItemCard from './ItemCard';\n// import './dashboard.css'\n// class Dashboard extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             // user: localStorage.getItem(\"employer\"),\n//             selectedJob: null,\n//             items: [],\n//             filteredItems:[],\n//             jobSearchText:\"\",\n//         };\n//     }\n//     async f1() {\n//         const snapShot = await firestore.collection('dashboard').get();\n//         // console.log(snapShot.docs);\n//         const docsArray = snapShot.docs;\n//         // console.log(docsArray)\n//         const docsArrayData = docsArray.map(doc => ({...doc.data(),id:doc.id}));\n//         return docsArrayData;\n//     }\n//     async functionFirebase() {\n//         const array = await this.f1();\n//         this.setState(Object.assign(this.state.items, { items: array,filteredItems: array }))\n//     }\n//     handleSearch = (event) =>{\n//         this.setState({jobSearchText:event.target.value},() => {\n//             var __self = this;\n//             var updatedList = __self.state.items;\n//             updatedList = __self.state.items.filter(function (key) {\n//                 console.log(key)\n//                 return (\n//                     key.item\n//                         .toLowerCase()\n//                         .search(__self.state.jobSearchText.toLowerCase()) !== -1\n//                     //     ||\n//                     // .name.toLowerCase()\n//                     // .search(__self.state.jobSearchText.toLowerCase()) !== -1 ||\n//                     // item.skillName.toString().toLowerCase().search(__self.state.jobSearchText.toLowerCase()) !== -1\n//                 );\n//             });\n//             this.setState({\n//                 filteredItems: updatedList\n//             });\n//         })\n//     }\n//     componentDidMount() {\n//         // if (!this.state.user) {\n//         //     window.location.assign(\"/\");\n//         // }\n//         //this.setState({user:auth.currentUser})\n//         this.functionFirebase()\n//         // console.log(this.state.items);\n//         // console.log(\"user:\" + this.state.user)\n//     }\n//     render() {\n//         // console.log(localStorage.getItem('currentUserEmail'));\n//         return (\n//             <div>\n//                 <h1 className=\"head\">Find Items</h1>\n//                 <FormControl>\n//                 <TextField label=\"Search Jobs\" value={this.state.jobSearchText} onChange={this.handleSearch} style={{marginTop:\"1%\"}}/>\n//                 </FormControl>\n//                 <Button  className=\"btn\" onClick={() => window.location.assign(\"/addjob\")}>+Add New Item</Button>\n//                 <div style={{display:\"flex\", flexWrap:\"wrap\"}}>\n//                     {this.state.filteredItems.map(element => {\n//                         return (\n//                             <div style={{margin:\"2% 1%\"}}>\n//                                 <ItemCard event={element} />\n//                             </div>\n//                         )\n//                     })}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/Users/yatinsatija/Desktop/RVCEx/src/pages/dashboard/Dashboard.js"],"names":["React","TextField","Button","FormControl","firestore","ItemCard","Dashboard","Component","constructor","props","handleSearch","event","setState","jobSearchText","target","value","__self","updatedList","state","items","filter","key","console","log","itemName","toLowerCase","search","filteredItems","selectedJob","componentWillMount","localStorage","getItem","alert","history","push","currentUserDocument","doc","get","tokens","data","f1","snapShot","collection","docsArray","docs","docsArrayData","map","id","functionFirebase","array","isAssigned","Object","assign","componentDidMount","render","marginTop","window","location","display","flexWrap","element","i","margin"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,WAA5B,QAA+C,mBAA/C;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgDnBC,YAhDmB,GAgDHC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,aAAa,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA9B,OAAd,EAAqD,MAAM;AACzD,YAAIC,MAAM,GAAG,IAAb;;AACA,YAAIC,WAAW,GAAGD,MAAM,CAACE,KAAP,CAAaC,KAA/B;AACAF,QAAAA,WAAW,GAAGD,MAAM,CAACE,KAAP,CAAaC,KAAb,CAAmBC,MAAnB,CAA0B,UAAUC,GAAV,EAAe;AACrDC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,iBACEA,GAAG,CAACG,QAAJ,CACGC,WADH,GAEGC,MAFH,CAEUV,MAAM,CAACE,KAAP,CAAaL,aAAb,CAA2BY,WAA3B,EAFV,MAEwD,CAAC,CAH3D;AAKD,SAPa,CAAd;AASA,aAAKb,QAAL,CAAc;AACZe,UAAAA,aAAa,EAAEV;AADH,SAAd;AAGD,OAfD;AAgBD,KAjEkB;;AAGjB,SAAKC,KAAL,GAAa;AACXU,MAAAA,WAAW,EAAE,IADF;AAEXT,MAAAA,KAAK,EAAE,EAFI;AAGXQ,MAAAA,aAAa,EAAE,EAHJ;AAIXd,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAMD;;AAED,QAAMgB,kBAAN,GAA2B;AACzBP,IAAAA,OAAO,CAACC,GAAR,CAAYO,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAZ;;AACA,QAAI,CAACD,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAL,EAA+C;AAC7CC,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACA,WAAKvB,KAAL,CAAWwB,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACD,KAHD,MAGO;AACL,YAAMC,mBAAmB,GAAG,MAAM/B,SAAS,CAACgC,GAAV,CAC/B,SAAQN,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAyC,EADlB,EAEhCM,GAFgC,EAAlC;AAGA,YAAM;AAAEC,QAAAA;AAAF,UAAaH,mBAAmB,CAACI,IAApB,EAAnB;;AACA,UAAID,MAAM,GAAG,CAAb,EAAgB;AACdN,QAAAA,KAAK,CACH,sGADG,CAAL;AAGA,aAAKvB,KAAL,CAAWwB,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD;AACF;AACF;;AAED,QAAMM,EAAN,GAAW;AACT,UAAMC,QAAQ,GAAG,MAAMrC,SAAS,CAACsC,UAAV,CAAqB,OAArB,EAA8BL,GAA9B,EAAvB;AACA,UAAMM,SAAS,GAAGF,QAAQ,CAACG,IAA3B;AACA,UAAMC,aAAa,GAAGF,SAAS,CAACG,GAAV,CAAeV,GAAD,KAAU,EAC5C,GAAGA,GAAG,CAACG,IAAJ,EADyC;AAE5CQ,MAAAA,EAAE,EAAEX,GAAG,CAACW;AAFoC,KAAV,CAAd,CAAtB;AAIA,WAAOF,aAAP;AACD;;AAED,QAAMG,gBAAN,GAAyB;AACvB,QAAIC,KAAK,GAAG,MAAM,KAAKT,EAAL,EAAlB;AACAS,IAAAA,KAAK,GAAGA,KAAK,CAAC7B,MAAN,CAAcgB,GAAD,IAASA,GAAG,CAACc,UAAJ,KAAmB,KAAzC,CAAR;AACA,SAAKtC,QAAL,CACEuC,MAAM,CAACC,MAAP,CAAc,KAAKlC,KAAL,CAAWC,KAAzB,EAAgC;AAAEA,MAAAA,KAAK,EAAE8B,KAAT;AAAgBtB,MAAAA,aAAa,EAAEsB;AAA/B,KAAhC,CADF;AAGD;;AAqBDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,gBAAL;AACA1B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,KAAvB;AACD;;AAEDmC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,KAAK,EAAC,aADR;AAEE,UAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWL,aAFpB;AAGE,UAAA,QAAQ,EAAE,KAAKH,YAHjB;AAIE,UAAA,KAAK,EAAE;AAAE6C,YAAAA,SAAS,EAAE;AAAb;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE,QAAC,MAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,OAAO,EAAE,MAAMC,MAAM,CAACC,QAAP,CAAgBL,MAAhB,CAAuB,SAAvB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAgBE;AAAK,QAAA,KAAK,EAAE;AAAEM,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,QAAQ,EAAE;AAA7B,SAAZ;AAAA,kBACG,KAAKzC,KAAL,CAAWS,aAAX,CAAyBmB,GAAzB,CAA6B,CAACc,OAAD,EAAUC,CAAV,KAAgB;AAC5C,8BACE;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAZ;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEF;AAAjB,eAA+BC,CAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA;AADH;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAtGqC;;AAyGxC,eAAevD,SAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { TextField, Button, FormControl } from \"@material-ui/core\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport ItemCard from \"./ItemCard\";\nimport \"./dashboard.css\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedJob: null,\n      items: [],\n      filteredItems: [],\n      jobSearchText: \"\",\n    };\n  }\n\n  async componentWillMount() {\n    console.log(localStorage.getItem(\"currentUserEmail\"));\n    if (!localStorage.getItem(\"currentUserEmail\")) {\n      alert(\"Login to use dashboard\");\n      this.props.history.push(\"/signin\");\n    } else {\n      const currentUserDocument = await firestore.doc(\n        `users/${localStorage.getItem(\"currentUserEmail\")}`,\n      ).get();\n      const { tokens } = currentUserDocument.data();\n      if (tokens < 5) {\n        alert(\n          \"You don't have minimum tokens to view dashboard\\nYou can get more tokens on adding any item of yours\",\n        );\n        this.props.history.push(\"/myitems\");\n      }\n    }\n  }\n\n  async f1() {\n    const snapShot = await firestore.collection(\"items\").get();\n    const docsArray = snapShot.docs;\n    const docsArrayData = docsArray.map((doc) => ({\n      ...doc.data(),\n      id: doc.id,\n    }));\n    return docsArrayData;\n  }\n\n  async functionFirebase() {\n    var array = await this.f1();\n    array = array.filter((doc) => doc.isAssigned === false);\n    this.setState(\n      Object.assign(this.state.items, { items: array, filteredItems: array }),\n    );\n  }\n\n  handleSearch = (event) => {\n    this.setState({ jobSearchText: event.target.value }, () => {\n      var __self = this;\n      var updatedList = __self.state.items;\n      updatedList = __self.state.items.filter(function (key) {\n        console.log(key);\n        return (\n          key.itemName\n            .toLowerCase()\n            .search(__self.state.jobSearchText.toLowerCase()) !== -1\n        );\n      });\n\n      this.setState({\n        filteredItems: updatedList,\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.functionFirebase();\n    console.log(this.state.items);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"head\">Find Items</h1>\n        <FormControl>\n          <TextField\n            label=\"Search Jobs\"\n            value={this.state.jobSearchText}\n            onChange={this.handleSearch}\n            style={{ marginTop: \"1%\" }}\n          />\n        </FormControl>\n        <Button\n          className=\"btn\"\n          onClick={() => window.location.assign(\"/upload\")}\n        >\n          +Add New Item\n        </Button>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {this.state.filteredItems.map((element, i) => {\n            return (\n              <div style={{ margin: \"2% 1%\" }}>\n                <ItemCard event={element} key={i} />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n\n// import React from 'react';\n// import {TextField, Button, FormControl } from '@material-ui/core';\n// import { firestore } from '../../firebase/firebase.utils';\n// import ItemCard from './ItemCard';\n// import './dashboard.css'\n\n// class Dashboard extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             // user: localStorage.getItem(\"employer\"),\n//             selectedJob: null,\n//             items: [],\n//             filteredItems:[],\n//             jobSearchText:\"\",\n//         };\n//     }\n\n//     async f1() {\n//         const snapShot = await firestore.collection('dashboard').get();\n//         // console.log(snapShot.docs);\n//         const docsArray = snapShot.docs;\n//         // console.log(docsArray)\n//         const docsArrayData = docsArray.map(doc => ({...doc.data(),id:doc.id}));\n//         return docsArrayData;\n//     }\n\n//     async functionFirebase() {\n//         const array = await this.f1();\n//         this.setState(Object.assign(this.state.items, { items: array,filteredItems: array }))\n//     }\n\n//     handleSearch = (event) =>{\n//         this.setState({jobSearchText:event.target.value},() => {\n//             var __self = this;\n//             var updatedList = __self.state.items;\n//             updatedList = __self.state.items.filter(function (key) {\n//                 console.log(key)\n//                 return (\n//                     key.item\n//                         .toLowerCase()\n//                         .search(__self.state.jobSearchText.toLowerCase()) !== -1\n//                     //     ||\n//                     // .name.toLowerCase()\n//                     // .search(__self.state.jobSearchText.toLowerCase()) !== -1 ||\n//                     // item.skillName.toString().toLowerCase().search(__self.state.jobSearchText.toLowerCase()) !== -1\n//                 );\n//             });\n\n//             this.setState({\n//                 filteredItems: updatedList\n//             });\n//         })\n//     }\n\n//     componentDidMount() {\n\n//         // if (!this.state.user) {\n//         //     window.location.assign(\"/\");\n//         // }\n//         //this.setState({user:auth.currentUser})\n//         this.functionFirebase()\n//         // console.log(this.state.items);\n//         // console.log(\"user:\" + this.state.user)\n//     }\n\n//     render() {\n//         // console.log(localStorage.getItem('currentUserEmail'));\n\n//         return (\n//             <div>\n//                 <h1 className=\"head\">Find Items</h1>\n//                 <FormControl>\n//                 <TextField label=\"Search Jobs\" value={this.state.jobSearchText} onChange={this.handleSearch} style={{marginTop:\"1%\"}}/>\n//                 </FormControl>\n//                 <Button  className=\"btn\" onClick={() => window.location.assign(\"/addjob\")}>+Add New Item</Button>\n//                 <div style={{display:\"flex\", flexWrap:\"wrap\"}}>\n//                     {this.state.filteredItems.map(element => {\n//                         return (\n//                             <div style={{margin:\"2% 1%\"}}>\n//                                 <ItemCard event={element} />\n//                             </div>\n\n//                         )\n//                     })}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}