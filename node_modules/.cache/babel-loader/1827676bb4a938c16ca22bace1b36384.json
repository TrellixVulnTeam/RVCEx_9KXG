{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCGD22VfRYiGhx8tZvC1fXdjxMqsYGJbeQ\",\n  authDomain: \"rvcex-88dc4.firebaseapp.com\",\n  projectId: \"rvcex-88dc4\",\n  storageBucket: \"rvcex-88dc4.appspot.com\",\n  messagingSenderId: \"689061837641\",\n  appId: \"1:689061837641:web:d4b2566d4c551d58453898\",\n  measurementId: \"G-M7HHXVD3W3\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${additionalData.rvceMailId}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      name,\n      usn,\n      socialMediaHandle,\n      roomNumber,\n      mobileNumber,\n      rvceMailId,\n      tokens\n    } = additionalData;\n\n    try {\n      await userRef.set({\n        name,\n        usn,\n        roomNumber,\n        mobileNumber,\n        rvceMailId,\n        socialMediaHandle,\n        tokens\n      });\n    } catch (error) {\n      alert(\"Error creating user!\");\n      console.log(\"Error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(firebaseConfig);\nexport const storage = firebase.storage();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/yatinsatija/Desktop/RVCEx/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","rvceMailId","snapShot","get","exists","name","usn","socialMediaHandle","roomNumber","mobileNumber","tokens","set","error","alert","console","log","message","initializeApp","storage","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAO,kBAAP;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,6BAFO;AAGnBC,EAAAA,SAAS,EAAE,aAHQ;AAInBC,EAAAA,aAAa,EAAE,yBAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAArB;AAYA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAeC,cAAf,KAAkC;AACvE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQH,cAAc,CAACI,UAAW,EAAjD,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAGA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAYC,MAAAA,iBAAZ;AAA+BC,MAAAA,UAA/B;AAA2CC,MAAAA,YAA3C;AACJR,MAAAA,UADI;AACOS,MAAAA;AADP,QACkBb,cADxB;;AAGE,QAAI;AACF,YAAMC,OAAO,CAACa,GAAR,CAAY;AAChBN,QAAAA,IADgB;AAEhBC,QAAAA,GAFgB;AAGhBE,QAAAA,UAHgB;AAIhBC,QAAAA,YAJgB;AAKhBR,QAAAA,UALgB;AAMhBM,QAAAA,iBANgB;AAOhBG,QAAAA;AAPgB,OAAZ,CAAN;AASD,KAVD,CAUE,OAAOE,KAAP,EAAc;AACdC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAoCH,KAAK,CAACI,OAA1C;AACD;AAEJ;;AAED,SAAOlB,OAAP;AAGH,CAhCM;AAkCPZ,QAAQ,CAAC+B,aAAT,CAAuB9B,cAAvB;AACA,OAAO,MAAM+B,OAAO,GAAGhC,QAAQ,CAACgC,OAAT,EAAhB;AACP,OAAO,MAAMC,IAAI,GAAGjC,QAAQ,CAACiC,IAAT,EAAb;AACP,OAAO,MAAMpB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMqB,QAAQ,GAAG,IAAIlC,QAAQ,CAACiC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAelC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCGD22VfRYiGhx8tZvC1fXdjxMqsYGJbeQ\",\n  authDomain: \"rvcex-88dc4.firebaseapp.com\",\n  projectId: \"rvcex-88dc4\",\n  storageBucket: \"rvcex-88dc4.appspot.com\",\n  messagingSenderId: \"689061837641\",\n  appId: \"1:689061837641:web:d4b2566d4c551d58453898\",\n  measurementId: \"G-M7HHXVD3W3\",\n};\n\n\n\nexport const createUserProfileDocument = async(userAuth,additionalData) => {\n    if(!userAuth) return;\n    \n    const userRef = firestore.doc(`users/${additionalData.rvceMailId}`);\n    const snapShot = await userRef.get()\n\n    \n    if(!snapShot.exists){\n      const { name, usn,socialMediaHandle, roomNumber, mobileNumber,\n        rvceMailId,tokens } = additionalData;\n\n        try {\n          await userRef.set({\n            name,\n            usn,\n            roomNumber,\n            mobileNumber,\n            rvceMailId,\n            socialMediaHandle,\n            tokens,\n          })\n        } catch (error) {\n          alert(\"Error creating user!\");\n          \n          console.log(\"Error creating user\" , error.message);\n        }\n\n    }\n\n    return userRef;\n\n\n}\n\nfirebase.initializeApp(firebaseConfig);\nexport const storage = firebase.storage();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}