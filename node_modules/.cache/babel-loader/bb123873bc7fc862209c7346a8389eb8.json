{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yatinsatija/Desktop/RVCEx/src/chat/Chat.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport \"./Chat.css\";\nimport firebase from \"firebase/app\";\nimport { auth, firestore } from \"../firebase/firebase.utils\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nexport default function Chat(props) {\n  _s();\n\n  const [user] = useAuthState(auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CApp\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Global Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: \"green\",\n          height: \"30px\",\n          width: \"100px\",\n          color: \"white\"\n        },\n        onClick: () => props.history.push(\"/\"),\n        children: \"Goto Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignOut, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: user ? /*#__PURE__*/_jsxDEV(ChatRoom, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"hP/7NvzUIXfxIpRVjMlmHSnysKo=\", false, function () {\n  return [useAuthState];\n});\n\n_c = Chat;\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        color: \"white\",\n        backgroundColor: \"#424242\"\n      },\n      className: \"sign-in button1\",\n      onClick: signInWithGoogle,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"p1\",\n      children: \"Do not violate the community guidelines or you will be banned for life!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = SignIn;\n\nfunction SignOut() {\n  return auth.currentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"sign-out button1\",\n    type: \"button\",\n    onClick: () => auth.signOut(),\n    children: \"Sign Out\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = SignOut;\n\nfunction ChatRoom() {\n  _s2();\n\n  const dummy = useRef();\n  const messagesRef = firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\n  const [messages] = useCollectionData(query, {\n    idField: \"id\"\n  });\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async e => {\n    e.preventDefault(); // if(auth.currentUser){}\n\n    const {\n      uid,\n      photoURL\n    } = auth.currentUser; // console.log(\"In send message\");\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    }); // console.log(\"Message sent to firebase\")\n\n    setFormValue(\"\");\n    dummy.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main1\",\n      children: [messages && messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 31\n      }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: dummy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form1\",\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input1\",\n        value: formValue,\n        onChange: e => setFormValue(e.target.value),\n        placeholder: \"say something nice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button1\",\n        type: \"submit\",\n        disabled: !formValue,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(ChatRoom, \"mjNEwEIb0WBSFyCyv/zX3AnHy9U=\", false, function () {\n  return [useCollectionData];\n});\n\n_c4 = ChatRoom;\n\nfunction ChatMessage(props) {\n  const {\n    text,\n    uid,\n    photoURL\n  } = props.message;\n\n  if (auth.currentUser) {\n    const messageClass = uid === auth.currentUser.uid ? \"sent\" : \"received\";\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${messageClass}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img1\",\n          alt: \"\",\n          src: photoURL || \"https://api.adorable.io/avatars/23/abott@adorable.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p1\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_c5 = ChatMessage;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"SignIn\");\n$RefreshReg$(_c3, \"SignOut\");\n$RefreshReg$(_c4, \"ChatRoom\");\n$RefreshReg$(_c5, \"ChatMessage\");","map":{"version":3,"sources":["/Users/yatinsatija/Desktop/RVCEx/src/chat/Chat.js"],"names":["React","useRef","useState","firebase","auth","firestore","useAuthState","useCollectionData","Chat","props","user","backgroundColor","height","width","color","history","push","SignIn","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","messagesRef","collection","query","orderBy","limit","messages","idField","formValue","setFormValue","sendMessage","e","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","id","target","value","ChatMessage","message","messageClass"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./Chat.css\";\nimport firebase from \"firebase/app\";\nimport { auth, firestore } from \"../firebase/firebase.utils\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nexport default function Chat(props) {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"CApp\">\n      <header>\n        <h1>Global Chat</h1>\n        <button\n          style={{\n            backgroundColor: \"green\",\n            height: \"30px\",\n            width: \"100px\",\n            color: \"white\",\n          }}\n          onClick={() => props.history.push(\"/\")}\n        >\n          Goto Home\n        </button>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <>\n      <button style={{color:\"white\",backgroundColor:\"#424242\"}} className=\"sign-in button1\" onClick={signInWithGoogle}>\n        Sign in with Google\n      </button>\n      <p className=\"p1\">\n        Do not violate the community guidelines or you will be banned for life!\n      </p>\n    </>\n  );\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button\n      className=\"sign-out button1\"\n      type=\"button\"\n      onClick={() => auth.signOut()}\n    >\n      Sign Out\n    </button>\n  );\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\n\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    // if(auth.currentUser){}\n    const { uid, photoURL } = auth.currentUser;\n    // console.log(\"In send message\");\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n    });\n\n    // console.log(\"Message sent to firebase\")\n    setFormValue(\"\");\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (<>\n    <main className=\"main1\">\n      {messages &&\n        messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n    </main>\n\n    <form className=\"form1\" onSubmit={sendMessage}>\n      <input\n        className=\"input1\"\n        value={formValue}\n        onChange={(e) => setFormValue(e.target.value)}\n        placeholder=\"say something nice\"\n      />\n\n      <button className=\"button1\" type=\"submit\" disabled={!formValue}>\n        Send\n      </button>\n    </form>\n  </>);\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  if (auth.currentUser) {\n    const messageClass = uid === auth.currentUser.uid ? \"sent\" : \"received\";\n\n    return (<>\n      <div className={`message ${messageClass}`}>\n        <img\n          className=\"img1\"\n          alt=\"\"\n          src={photoURL ||\n            \"https://api.adorable.io/avatars/23/abott@adorable.png\"}\n        />\n        <p className=\"p1\">{text}</p>\n      </div>\n    </>);\n  } else {\n    return (\n      <SignIn />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}