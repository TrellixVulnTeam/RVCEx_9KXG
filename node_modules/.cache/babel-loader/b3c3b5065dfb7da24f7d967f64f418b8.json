{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yatinsatija/Desktop/RVCEx/src/pages/dashboard/ItemCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { firestore, storage } from \"../../firebase/firebase.utils\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 305,\n    height: 390,\n    \"&:hover\": {\n      boxShadow: \"10px 10px 10px 0px rgba(0, 0, 0, 0.64)\",\n      marginLeft: \"-3px\",\n      marginTop: \"-2px\",\n      transitionDuration: 200\n    }\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  dialog: {\n    [theme.breakpoints.up(\"md\")]: {\n      flexDirection: \"row\"\n    },\n    flexDirection: \"column\",\n    display: \"flex\"\n  },\n  poster: {\n    [theme.breakpoints.up(\"md\")]: {\n      maxWidth: \"20rem\"\n    },\n    width: \"100%\"\n  },\n  content: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"60%\"\n    },\n    width: \"100%\",\n    padding: \"1%\"\n  }\n}));\nexport default function ItemCard(props) {\n  _s();\n\n  const classes = useStyles();\n  const prefersDarkMode = localStorage.getItem(\"darkMode\") === \"true\";\n  let loggedIn = localStorage.getItem(\"token\") !== null;\n  let useremail = localStorage.getItem(\"email\");\n  let userType = localStorage.getItem(\"token\");\n  console.log(loggedIn);\n  let mobile = window.matchMedia(\"(max-width: 300px)\").matches === \"true\";\n  const [open, setOpen] = React.useState(false);\n  const [eventDialog, setEventDialog] = React.useState(false);\n  let user = localStorage.getItem(\"token\"); //Shows snackbar with message and copies link in '' for user\n\n  const handleClick = () => {\n    setOpen(true);\n    navigator.clipboard.writeText(\"Copy this text to clipboard\");\n  };\n\n  const showImage = () => {\n    let storageRef = storage.ref();\n    let spaceRef = storageRef.child();\n  };\n\n  const applyForJob = () => {\n    let job = firestore.collection(\"jobs\").doc(`${props.event.name}` + \"-\" + `${props.event.title}`);\n    if (job === null) return;\n    job.get().then(doc => {\n      console.log(doc.data().desc);\n      let applicants = doc.data().applicants;\n      applicants[applicants.length] = useremail;\n      console.log(applicants);\n      job.update({\n        applicants: applicants\n      });\n    });\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      onDoubleClick: () => setEventDialog(true),\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: prefersDarkMode ? \"#717171\" : \"azure\",\n        cursor: \"pointer\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: props.event.itemName // subheader={props.event.description}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.poster,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: props.event.imageUrl,\n            style: {\n              backgroundSize: \"contain\",\n              width: \"inherit\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        disableSpacing: true,\n        style: {\n          marginTop: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: () => setEventDialog(true),\n          children: \"Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: Boolean(eventDialog),\n      onClose: () => setEventDialog(false),\n      scroll: \"body\",\n      variant: \"fade\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: props.event.itemName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: props.event.ownerEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dialog,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [loggedIn && userType === \"employer\" && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: applyForJob,\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEventDialog(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ItemCard, \"PyR9QFoVN9RcRNqT9u5GwCff7mY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ItemCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemCard\");","map":{"version":3,"sources":["/Users/yatinsatija/Desktop/RVCEx/src/pages/dashboard/ItemCard.js"],"names":["React","makeStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","firestore","storage","useStyles","theme","root","width","height","boxShadow","marginLeft","marginTop","transitionDuration","media","paddingTop","dialog","breakpoints","up","flexDirection","display","poster","maxWidth","content","padding","ItemCard","props","classes","prefersDarkMode","localStorage","getItem","loggedIn","useremail","userType","console","log","mobile","window","matchMedia","matches","open","setOpen","useState","eventDialog","setEventDialog","user","handleClick","navigator","clipboard","writeText","showImage","storageRef","ref","spaceRef","child","applyForJob","job","collection","doc","event","name","title","get","then","data","desc","applicants","length","update","handleClose","reason","backgroundColor","cursor","itemName","imageUrl","backgroundSize","Boolean","ownerEmail","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { firestore, storage } from \"../../firebase/firebase.utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 305,\n    height: 390,\n    \"&:hover\": {\n      boxShadow: \"10px 10px 10px 0px rgba(0, 0, 0, 0.64)\",\n      marginLeft: \"-3px\",\n      marginTop: \"-2px\",\n      transitionDuration: 200,\n    },\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  dialog: {\n    [theme.breakpoints.up(\"md\")]: {\n      flexDirection: \"row\",\n    },\n    flexDirection: \"column\",\n    display: \"flex\",\n  },\n  poster: {\n    [theme.breakpoints.up(\"md\")]: {\n      maxWidth: \"20rem\",\n    },\n    width: \"100%\",\n  },\n  content: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"60%\",\n    },\n    width: \"100%\",\n    padding: \"1%\",\n  },\n}));\n\nexport default function ItemCard(props) {\n  const classes = useStyles();\n  const prefersDarkMode = localStorage.getItem(\"darkMode\") === \"true\";\n  let loggedIn = localStorage.getItem(\"token\") !== null;\n  let useremail = localStorage.getItem(\"email\");\n  let userType = localStorage.getItem(\"token\");\n  console.log(loggedIn);\n  let mobile = window.matchMedia(\"(max-width: 300px)\").matches === \"true\";\n  const [open, setOpen] = React.useState(false);\n  const [eventDialog, setEventDialog] = React.useState(false);\n  let user = localStorage.getItem(\"token\");\n\n  //Shows snackbar with message and copies link in '' for user\n  const handleClick = () => {\n    setOpen(true);\n    navigator.clipboard.writeText(\"Copy this text to clipboard\");\n  };\n  const showImage = () => {\n    let storageRef = storage.ref();\n    let spaceRef = storageRef.child();\n  };\n\n  const applyForJob = () => {\n    let job = firestore\n      .collection(\"jobs\")\n      .doc(`${props.event.name}` + \"-\" + `${props.event.title}`);\n    if (job === null) return;\n    job.get().then((doc) => {\n      console.log(doc.data().desc);\n      let applicants = doc.data().applicants;\n      applicants[applicants.length] = useremail;\n      console.log(applicants);\n      job.update({\n        applicants: applicants,\n      });\n    });\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Card\n        className={classes.root}\n        onDoubleClick={() => setEventDialog(true)}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          backgroundColor: prefersDarkMode ? \"#717171\" : \"azure\",\n          cursor: \"pointer\",\n        }}\n      >\n        <CardHeader\n          title={props.event.itemName}\n          // subheader={props.event.description}\n        />\n        {/* <CardMedia\n          className={classes.media}\n          image=\"/images/Logo.jpg\"\n          title=\"Paella dish\"\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Keywords: {props.event.skillName.map(element => {\n            return element + \",\";\n          })}\n          </Typography>\n        </CardContent> */}\n        <DialogContent>\n          {/* <span style={{ fontSize: \"1em\" }}>\n                <b>Employer:</b> {props.event.name}\n              </span><br /><br />\n              <span style={{ fontSize: \"1em\"}}>\n                <b>Description:</b> {props.event.desc}\n              </span><br /><br />\n              <span style={{ fontSize: \"1em\", margin: \"2px\" }}>\n                <b>Date and Time:</b> {props.event.date},{props.event.time}\n              </span><br /><br />\n              <span style={{ fontSize: \"1em\", margin: \"2px\" }}>\n                <b>Payment:</b> {props.event.payment}\n              </span><br /><br />\n              <span style={{ fontSize: \"1em\", margin: \"2px\" }}>\n                <b>Employer Email:</b> {props.event.email}\n              </span><br /><br />\n              <span style={{ fontSize: \"1em\", margin: \"2px\" }}>\n                <b>Contact No:</b> {props.event.phNo}\n              </span><br /><br />\n              <span style={{ fontSize: \"1em\", margin: \"2px\" }}>\n                <b>Location:</b> {props.event.location}\n              </span><br /><br /> */}\n          <div className={classes.poster}>\n            <img\n              src={props.event.imageUrl}\n              style={{ backgroundSize: \"contain\", width: \"inherit\" }}\n            />\n          </div>\n        </DialogContent>\n        <CardActions disableSpacing style={{ marginTop: \"auto\" }}>\n          {/* <Button size=\"small\" onClick={handleClick}>\n            Share\n          </Button> */}\n          {/* <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              Link Copied!\n            </Alert>\n          </Snackbar> */}\n          <Button size=\"small\" onClick={() => setEventDialog(true)}>\n            Read More\n          </Button>\n        </CardActions>\n      </Card>\n\n      {/* Dialog for each event*/}\n      <Dialog\n        open={Boolean(eventDialog)}\n        onClose={() => setEventDialog(false)}\n        scroll=\"body\"\n        variant=\"fade\"\n      >\n        <DialogTitle>{props.event.itemName}</DialogTitle>\n        <DialogTitle>{props.event.ownerEmail}</DialogTitle>\n        <DialogContent>\n          <div className={classes.dialog}>\n            <div>{props.event.description}</div>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          {loggedIn && userType === \"employer\" && (\n            <Button onClick={applyForJob}>Apply</Button>\n          )}\n          <Button onClick={() => setEventDialog(false)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}